tosca_definitions_version: hwpaas_tosca_version_1_4_1
inputs:
  artifact_id:
    default: ARTIFACT_ID
    type: string
  beekeeper_artifact_id:
    default: beekeeper
    type: string
  beekeeper_image:
    default: 100.125.1.34:20202/willemjiang/beekeeper:latest
    type: string
  company_vol_vm_path:
    default: /var/paas/cse/trace/company
    type: string
  doorman_artifact_id:
    default: doorman
    type: string
  doorman_image:
    default: 100.125.1.34:20202/willemjiang/doorman:latest
    type: string
  doorman_java_opts:
    default: -Dspring.profiles.active=prd -Dspring.datasource.url=jdbc:mysql://mysql:33306/company?useSSL=false
    type: string
  java_opts:
    default: JAVA_OPTS
    type: string
  limit_cpu:
    default: 2000m
    type: string
  limit_memory:
    default: 2Gi
    type: string
  manager_artifact_id:
    default: manager
    type: string
  manager_container_port:
    default: 8080
    type: integer
  manager_image:
    default: 100.125.1.34:20202/willemjiang/manager:latest
    type: string
  manager_java_opts:
    default: -Dserver.port=8080
    type: string
  manager_vm_port:
    default: 30100
    type: integer
  mysql_container_port:
    default: 3306
    type: integer
  mysql_database:
    default: MYSQL_DATABASE
    type: string
  mysql_database_value:
    default: company
    type: string
  mysql_image:
    default: 100.125.1.34:20202/willemjiang/mysql-server:5.7
    type: string
  mysql_password:
    default: MYSQL_PASSWORD
    type: string
  mysql_password_value:
    default: password
    type: string
  mysql_root_password:
    default: MYSQL_ROOT_PASSWORD
    type: string
  mysql_root_password_value:
    default: password
    type: string
  mysql_user:
    default: MYSQL_USER
    type: string
  mysql_user_value:
    default: company
    type: string
  mysql_vm_port:
    default: 33306
    type: integer
  request_cpu:
    default: 1000m
    type: string
  request_memory:
    default: 1Gi
    type: string
  worker_artifact_id:
    default: worker
    type: string
  worker_image:
    default: 100.125.1.34:20202/willemjiang/worker:latest
    type: string
  zipkin_container_port:
    default: 9411
    type: integer
  zipkin_image:
    default: 100.125.1.34:20202/willemjiang/zipkin:1
    type: string
  zipkin_vm_port:
    default: 30411
    type: integer
node_templates:
  cluster-resources:
    type: hwpaas.nodes.Cluster
    properties:
      name: company
      namespace: default
  company:
    type: hwpaas.nodes.LocalVolume
    properties:
      host_path:
        get_input: company_vol_vm_path
      name: company
  company-beekeeper:
    type: hwpaas.nodes.Application
    properties:
      name: company-beekeeper
      resource_selector:
        affinities:
          antiself: false
      type: container
    requirements:
    - package:
        node: company-beekeeper-image
        relationship: hwpaas.relationships.PackageConsistsOf
    - storage:
        node: cluster-resources
        relationship: hwpaas.relationships.HostedOn
    - volume:
        node: company
        relationship: hwpaas.relationships.AttachesTo
    - dependency:
        node: zipkin
        relationship: hwpaas.relationships.ConnectsTo
  company-beekeeper-image:
    type: hwpaas.nodes.SoftwareComponent
    properties:
      name: company-beekeeper-image
      package:
        container_spec:
          image:
            get_input: beekeeper_image
          imagePullPolicy: Always
        deploy: true
        env:
        - name:
            get_input: artifact_id
          value:
            get_input: beekeeper_artifact_id
        package_type: container
        resource_spec:
          limit:
            cpu:
              get_input: limit_cpu
            memory:
              get_input: limit_memory
          request:
            cpu:
              get_input: request_cpu
            memory:
              get_input: request_memory
        volumes:
        - mountPath:
            get_input: company_vol_vm_path
          name: company
          policy:
            logs:
              rotate: ""
  company-doorman:
    type: hwpaas.nodes.Application
    properties:
      name: company-doorman
      resource_selector:
        affinities:
          antiself: false
      type: container
    requirements:
    - package:
        node: company-doorman-image
        relationship: hwpaas.relationships.PackageConsistsOf
    - volume:
        node: company
        relationship: hwpaas.relationships.AttachesTo
    - storage:
        node: cluster-resources
        relationship: hwpaas.relationships.HostedOn
    - dependency:
        node: zipkin
        relationship: hwpaas.relationships.ConnectsTo
    - dependency:
        node: mysql
        relationship: hwpaas.relationships.ConnectsTo
  company-doorman-image:
    type: hwpaas.nodes.SoftwareComponent
    properties:
      name: company-doorman-image
      package:
        container_spec:
          image:
            get_input: doorman_image
          imagePullPolicy: Always
        deploy: true
        env:
        - name:
            get_input: artifact_id
          value:
            get_input: doorman_artifact_id
        - name:
            get_input: java_opts
          value:
            get_input: doorman_java_opts
        package_type: container
        resource_spec:
          limit:
            cpu:
              get_input: limit_cpu
            memory:
              get_input: limit_memory
          request:
            cpu:
              get_input: request_cpu
            memory:
              get_input: request_memory
        volumes:
        - mountPath:
            get_input: company_vol_vm_path
          name: company
          policy:
            logs:
              rotate: ""
  company-manager:
    type: hwpaas.nodes.Application
    properties:
      name: company-manager
      resource_selector:
        affinities:
          antiself: false
      type: container
    requirements:
    - package:
        node: company-manager-image
        relationship: hwpaas.relationships.PackageConsistsOf
    - storage:
        node: cluster-resources
        relationship: hwpaas.relationships.HostedOn
    - volume:
        node: company
        relationship: hwpaas.relationships.AttachesTo
    - dependency:
        node: zipkin
        relationship: hwpaas.relationships.ConnectsTo
  company-manager-image:
    type: hwpaas.nodes.SoftwareComponent
    properties:
      name: company-manager-image
      package:
        container_spec:
          image:
            get_input: manager_image
          imagePullPolicy: Always
        deploy: true
        env:
        - name:
            get_input: artifact_id
          value:
            get_input: manager_artifact_id
        - name:
            get_input: java_opts
          value:
            get_input: manager_java_opts
        package_type: container
        ports:
        - containerPort:
            get_input: manager_container_port
        resource_spec:
          limit:
            cpu:
              get_input: limit_cpu
            memory:
              get_input: limit_memory
          request:
            cpu:
              get_input: request_cpu
            memory:
              get_input: request_memory
        service_spec:
          ports:
          - nodePort:
              get_input: manager_vm_port
            port:
              get_input: manager_vm_port
            targetPort:
              get_input: manager_container_port
          type: NodePort
        volumes:
        - mountPath:
            get_input: company_vol_vm_path
          name: company
          policy:
            logs:
              rotate: ""
  company-worker:
    type: hwpaas.nodes.Application
    properties:
      name: company-worker
      resource_selector:
        affinities:
          antiself: false
      type: container
    requirements:
    - package:
        node: company-worker-image
        relationship: hwpaas.relationships.PackageConsistsOf
    - storage:
        node: cluster-resources
        relationship: hwpaas.relationships.HostedOn
    - volume:
        node: company
        relationship: hwpaas.relationships.AttachesTo
    - dependency:
        node: zipkin
        relationship: hwpaas.relationships.ConnectsTo
  company-worker-image:
    type: hwpaas.nodes.SoftwareComponent
    properties:
      name: company-worker-image
      package:
        container_spec:
          image:
            get_input: worker_image
          imagePullPolicy: Always
        deploy: true
        env:
        - name:
            get_input: artifact_id
          value:
            get_input: worker_artifact_id
        package_type: container
        resource_spec:
          limit:
            cpu:
              get_input: limit_cpu
            memory:
              get_input: limit_memory
          request:
            cpu:
              get_input: request_cpu
            memory:
              get_input: request_memory
        volumes:
        - mountPath:
            get_input: company_vol_vm_path
          name: company
          policy:
            logs:
              rotate: ""
  mysql:
    type: hwpaas.nodes.Application
    properties:
      name: mysql
      resource_selector:
        affinities:
          antiself: false
      type: container
    requirements:
    - package:
        node: mysql-image
        relationship: hwpaas.relationships.PackageConsistsOf
    - storage:
        node: cluster-resources
        relationship: hwpaas.relationships.HostedOn
  mysql-image:
    type: hwpaas.nodes.SoftwareComponent
    properties:
      name: mysql-image
      package:
        container_spec:
          image:
            get_input: mysql_image
          imagePullPolicy: IfNotPresent
        deploy: true
        env:
        - name:
            get_input: mysql_user
          value:
            get_input: mysql_user_value
        - name:
            get_input: mysql_password
          value:
            get_input: mysql_password_value
        - name:
            get_input: mysql_root_password
          value:
            get_input: mysql_root_password_value
        - name:
            get_input: mysql_database
          value:
            get_input: mysql_database_value
        package_type: container
        ports:
        - containerPort:
            get_input: mysql_container_port
        resource_spec:
          limit:
            cpu:
              get_input: limit_cpu
            memory:
              get_input: limit_memory
          request:
            cpu:
              get_input: request_cpu
            memory:
              get_input: request_memory
        service_spec:
          ports:
          - port:
              get_input: mysql_vm_port
            targetPort:
              get_input: mysql_container_port
          type: NodePort
  zipkin:
    type: hwpaas.nodes.Application
    properties:
      name: zipkin
      resource_selector:
        affinities:
          antiself: false
      type: container
    requirements:
    - package:
        node: zipkin-image
        relationship: hwpaas.relationships.PackageConsistsOf
    - storage:
        node: cluster-resources
        relationship: hwpaas.relationships.HostedOn
  zipkin-image:
    type: hwpaas.nodes.SoftwareComponent
    properties:
      name: zipkin-image
      package:
        container_spec:
          image:
            get_input: zipkin_image
          imagePullPolicy: IfNotPresent
        deploy: true
        package_type: container
        ports:
        - containerPort:
            get_input: zipkin_container_port
        resource_spec:
          limit:
            cpu:
              get_input: limit_cpu
            memory:
              get_input: limit_memory
          request:
            cpu:
              get_input: request_cpu
            memory:
              get_input: request_memory
        service_spec:
          ports:
          - nodePort:
              get_input: zipkin_vm_port
            port:
              get_input: zipkin_vm_port
            targetPort:
              get_input: zipkin_container_port
          type: NodePort
